进程间通信
主要工具：信号、管道、fifo、消息队列、信号量、共享存储、mmap、记录锁
信号量和记录锁主要用于进程间同步
（未计入socket和UNIX域套接字）

总结
System V和POSIX都有信号量和消息队列，优先考虑POSIX
共享内存用System V的，因为POSIX的实现尚未完善
尽可能避免使用消息队列和信号量，而应当考虑管道和记录锁

在相关进程间共享内存可以考虑使用mmap匿名映射
在无关进程间使用共享存储段，除了XSI共享存储，也可以使用mmap将统一文件映射至它们的地址空间APUE 15.9节

pthread的mutex和条件变量也是可以用在进程之间的。
POSIX的信号量和消息队列也是可以用来线程之间的。（[三个多线程同步问题及其实现](https://blog.csdn.net/liuyuan185442111/article/details/49982595)中第一个例子）

TELL_WAIT除了[最好使用sigaction函数替代signal函数](https://blog.csdn.net/liuyuan185442111/article/details/85226728)中用信号的实现，也可以用管道实现（APUE 15.2节 管道），那么这样想：一个进程需要某个资源但不可用，于是阻塞住，另一个占有该资源的进程在释放资源的时候告诉第一个进程你可以解除阻塞使用资源了，只要是一个进程可以通知另一个进程解除阻塞的工具都可以用来实现TELL_WAIT（自己的推断，尚未实践）。那消息队列、二元信号量也都可以拿来实现TELL_WAIT。

参考